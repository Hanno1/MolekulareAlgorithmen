ALPHABET_LOG = {',': 'AAAA', '(': 'AAAC', 'a': 'AAAT', 'b': 'AACA', 'c': 'AACC', 'd': 'AACT', 'e': 'AATA', 'f': 'AATC', 'g': 'AATT', 'h': 'ACAA', 'i': 'ACAC', 'j': 'ACAT', 'k': 'ACCA', 'l': 'ACCC', 'm': 'ACCT', 'n': 'ACTA', 'o': 'ACTC', 'p': 'ACTT', 'q': 'ATAA', 'r': 'ATAC', 's': 'ATAT', 't': 'ATCA', 'u': 'ATCC', 'v': 'ATCT', 'w': 'ATTA', 'x': 'ATTC', 'y': 'ATTT', 'z': 'CAAA', '0': 'CAAC', '1': 'CAAT', '2': 'CACA', '3': 'CACC', '4': 'CACT', '5': 'CATA', '6': 'CATC', '7': 'CATT', '8': 'CCAA', '9': 'CCAC'}
INVERSE_ALPHABET_LOG = {'AAAA': ',', 'AAAC': '(', 'AAAT': 'a', 'AACA': 'b', 'AACC': 'c', 'AACT': 'd', 'AATA': 'e', 'AATC': 'f', 'AATT': 'g', 'ACAA': 'h', 'ACAC': 'i', 'ACAT': 'j', 'ACCA': 'k', 'ACCC': 'l', 'ACCT': 'm', 'ACTA': 'n', 'ACTC': 'o', 'ACTT': 'p', 'ATAA': 'q', 'ATAC': 'r', 'ATAT': 's', 'ATCA': 't', 'ATCC': 'u', 'ATCT': 'v', 'ATTA': 'w', 'ATTC': 'x', 'ATTT': 'y', 'CAAA': 'z', 'CAAC': '0', 'CAAT': '1', 'CACA': '2', 'CACC': '3', 'CACT': '4', 'CATA': '5', 'CATC': '6', 'CATT': '7', 'CCAA': '8', 'CCAC': '9'}

ALPHABET_BRACKET = {',': 'A', '(': 'AA', 'a': 'CCCCCC', 'b': 'CCCCCT', 'c': 'CCCCTC', 'd': 'CCCCTT', 'e': 'CCCTCC', 'f': 'CCCTCT', 'g': 'CCCTTC', 'h': 'CCCTTT', 'i': 'CCTCCC', 'j': 'CCTCCT', 'k': 'CCTCTC', 'l': 'CCTCTT', 'm': 'CCTTCC', 'n': 'CCTTCT', 'o': 'CCTTTC', 'p': 'CCTTTT', 'q': 'CTCCCC', 'r': 'CTCCCT', 's': 'CTCCTC', 't': 'CTCCTT', 'u': 'CTCTCC', 'v': 'CTCTCT', 'w': 'CTCTTC', 'x': 'CTCTTT', 'y': 'CTTCCC', 'z': 'CTTCCT', '0': 'CTTCTC', '1': 'CTTCTT', '2': 'CTTTCC', '3': 'CTTTCT', '4': 'CTTTTC', '5': 'CTTTTT', '6': 'TCCCCC', '7': 'TCCCCT', '8': 'TCCCTC', '9': 'TCCCTT'}
INVERSE_ALPHABET_BRACKET = {'A': ',', 'AA': '(', 'CCCCCC': 'a', 'CCCCCT': 'b', 'CCCCTC': 'c', 'CCCCTT': 'd', 'CCCTCC': 'e', 'CCCTCT': 'f', 'CCCTTC': 'g', 'CCCTTT': 'h', 'CCTCCC': 'i', 'CCTCCT': 'j', 'CCTCTC': 'k', 'CCTCTT': 'l', 'CCTTCC': 'm', 'CCTTCT': 'n', 'CCTTTC': 'o', 'CCTTTT': 'p', 'CTCCCC': 'q', 'CTCCCT': 'r', 'CTCCTC': 's', 'CTCCTT': 't', 'CTCTCC': 'u', 'CTCTCT': 'v', 'CTCTTC': 'w', 'CTCTTT': 'x', 'CTTCCC': 'y', 'CTTCCT': 'z', 'CTTCTC': '0', 'CTTCTT': '1', 'CTTTCC': '2', 'CTTTCT': '3', 'CTTTTC': '4', 'CTTTTT': '5', 'TCCCCC': '6', 'TCCCCT': '7', 'TCCCTC': '8', 'TCCCTT': '9'}

ALPHABET_BRACKET_IMPROVED = {',': 'T', '(': 'TT', 'a': 'AAAA', 'b': 'AAAC', 'c': 'AAAT', 'd': 'AACA', 'e': 'AACC', 'f': 'AACT', 'g': 'AATA', 'h': 'AATC', 'i': 'AATT', 'j': 'ACAA', 'k': 'ACAC', 'l': 'ACAT', 'm': 'ACCA', 'n': 'ACCC', 'o': 'ACCT', 'p': 'ACTA', 'q': 'ACTC', 'r': 'ACTT', 's': 'ATAA', 't': 'ATAC', 'u': 'ATAT', 'v': 'ATCA', 'w': 'ATCC', 'x': 'ATCT', 'y': 'ATTA', 'z': 'ATTC', '0': 'ATTT', '1': 'CAAA', '2': 'CAAC', '3': 'CAAT', '4': 'CACA', '5': 'CACC', '6': 'CACT', '7': 'CATA', '8': 'CATC', '9': 'CATT'}
INVERSE_ALPHABET_BRACKET_IMPROVED = {'T': ',', 'TT': '(', 'AAAA': 'a', 'AAAC': 'b', 'AAAT': 'c', 'AACA': 'd', 'AACC': 'e', 'AACT': 'f', 'AATA': 'g', 'AATC': 'h', 'AATT': 'i', 'ACAA': 'j', 'ACAC': 'k', 'ACAT': 'l', 'ACCA': 'm', 'ACCC': 'n', 'ACCT': 'o', 'ACTA': 'p', 'ACTC': 'q', 'ACTT': 'r', 'ATAA': 's', 'ATAC': 't', 'ATAT': 'u', 'ATCA': 'v', 'ATCC': 'w', 'ATCT': 'x', 'ATTA': 'y', 'ATTC': 'z', 'ATTT': '0', 'CAAA': '1', 'CAAC': '2', 'CAAT': '3', 'CACA': '4', 'CACC': '5', 'CACT': '6', 'CATA': '7', 'CATC': '8', 'CATT': '9'}
